<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="CreateApp" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="PushApp" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="CreateRoutes" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="BindRoutes" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="CreateService" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="BindServices" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="LoadYaml" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="SaveYaml" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="DeleteApp" />
  <UsingTask AssemblyFile="Cloudfoundry.Build.Tasks.dll" TaskName="RestartApp" />

  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v12.0\Web\Microsoft.Web.Publishing.targets" Condition="false" />

  <!--Append WebFTPPublish to the supported list.-->
  <PropertyGroup>
    <_WPPWebPublishMethodSupports>$(_WPPWebPublishMethodSupports);WebCloudFoundryPublish</_WPPWebPublishMethodSupports>
  </PropertyGroup>

  <!-- Publish application to TEMP location -->
  <Target Name="PublishToTemp" DependsOnTargets="PipelinePreDeployCopyAllFilesToOneFolder">
    <PropertyGroup>
      <NewGuid>$([System.Guid]::NewGuid())</NewGuid>
    </PropertyGroup>
    
    <PropertyGroup>
      <PublishTempAppPath>$(TEMP)\$(NewGuid)</PublishTempAppPath>
    </PropertyGroup>

    <Error Condition="'$(PublishTempAppPath)'==''" Text="The PublishTempAppPath property must be set to the intended publishing destination." />
    <MakeDir Condition="!Exists($(PublishTempAppPath))" Directories="$(PublishTempAppPath)" />
    <ItemGroup>
      <PublishFiles Include="$(_PackageTempDir)\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(PublishFiles)" DestinationFiles="@(PublishFiles->'$(PublishTempAppPath)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="True" />
  </Target>

  <!-- Publish application to cf deployment: create app, push app, create routes, bind routes, create services, bind services, start app -->
  <Target Name="Publish" DependsOnTargets="PublishToTemp">
    <ItemGroup>
      <CFRoutes Include="$(CFRoutes)"></CFRoutes>
      <CFRefreshToken Include="$(CFRefreshToken)"></CFRefreshToken>
    </ItemGroup>

    <LoginTask CFUser="$(CFUser)" CFPassword="$(CFPassword)" CFServerUri="$(CFServerUri)">
      <Output TaskParameter="CFRefreshToken" PropertyName="CFRefreshToken"/>
    </LoginTask>
    
    <CreateApp CFAppName="$(CFAppName)" CFStack="$(CFStack)" CFSpace="$(CFSpace)" CFRefreshToken="$(CFRefreshToken)">
      <Output TaskParameter="CFAppGuid" PropertyName="CFAppGuid"/>
    </CreateApp>

    <PushApp CFAppGuid="$(CFAppGuid)" CFAppPath="$(PublishTempAppPath)" CFStart="false" CFRefreshToken="$(CFRefreshToken)"></PushApp>

    <CreateRoutes Condition="'$(CFRoutes)' != ''" CFRefreshToken="$(CFRefreshToken)" CFSpace="$(CFSpace)" CFRoutes="@(CFRoutes)">
      <Output TaskParameter="CFRouteGuids" PropertyName="CFRouteGuids"></Output>
    </CreateRoutes>

    <BindRoutes CFRefreshToken="$(CFRefreshToken)" CFAppGuid="$(CFAppGuid)" CFRouteGuids="$(CFRouteGuids)"></BindRoutes>

    <CreateService Condition="'$(CFServiceName)' != '' And '$(CFServiceType)' != '' And '$(CFServicePlan)' != ''" CFRefreshToken="$(CFRefreshToken)" CFServiceName="$(CFServiceName)" CFServiceType="$(CFServiceType)" CFServicePlan="$(CFServicePlan)" CFSpace="$(CFSpace)">
      <Output TaskParameter="CFServiceGuid" PropertyName="CFServiceGuid"></Output>
    </CreateService>

    <ItemGroup>
      <ServicesGuids Include="$(CFServiceGuid)"></ServicesGuids>
    </ItemGroup>

    <BindServices CFRefreshToken="$(CFRefreshToken)" CFAppGuid="$(CFAppGuid)" CFServicesGuids="@(CFServicesGuids)"></BindServices>

    <RestartApp CFAppGuid="$(CFAppGuid)" CFRefreshToken="$(CFRefreshToken)"></RestartApp>

    <!-- Remove previously created temp directory -->
    <RemoveDir Directories="$(PublishTempAppPath)" />
    <Message Text="Removed application files from temp location: '$(PublishTempAppPath)'"/>
  </Target>

  <!-- Publish application with manifest to cf deployment: create app, push app, create routes, bind routes, create services, bind services, start app -->
  <Target Name="PublishWithManifest" DependsOnTargets="PublishToTemp">

    <LoadYaml ConfigurationFile="$(CFConfigurationFile)">
      <Output TaskParameter="CFStack" PropertyName="CFStack"/>
      <Output TaskParameter="CFAppName" PropertyName="CFAppName"/>
      <Output TaskParameter="CFAppPath" PropertyName="CFAppPath"/>
      <Output TaskParameter="CFRoutes" PropertyName="CFRoutes"/>
      <Output TaskParameter="CFMemory" PropertyName="CFMemory"/>
      <Output TaskParameter="CFInstancesNumber" PropertyName="CFInstancesNumber"/>
      <Output TaskParameter="CFServices" PropertyName="CFServices"/>
    </LoadYaml>

    <ItemGroup>
      <CFRefreshToken Include="$(CFRefreshToken)"></CFRefreshToken>
    </ItemGroup>

    <LoginTask CFUser="$(CFUser)" CFPassword="$(CFPassword)" CFServerUri="$(CFServerUri)">
      <Output TaskParameter="CFRefreshToken" PropertyName="CFRefreshToken"/>
    </LoginTask>
    
    <CreateApp CFAppName="$(CFAppName)" CFStack="$(CFStack)" CFSpace="$(CFSpace)" CFRefreshToken="$(CFRefreshToken)">
      <Output TaskParameter="CFAppGuid" PropertyName="CFAppGuid"/>
    </CreateApp>

    <PushApp CFAppGuid="$(CFAppGuid)" CFAppPath="$(PublishTempAppPath)" CFStart="true" CFRefreshToken="$(CFRefreshToken)"></PushApp>

    <CreateRoutes Condition="'$(CFRoutes)' != ''" CFRefreshToken="$(CFRefreshToken)" CFSpace="$(CFSpace)" CFRoutes="$(CFRoutes)">
      <Output TaskParameter="CFRouteGuids" PropertyName="CFRouteGuids"></Output>
    </CreateRoutes>

    <BindRoutes CFRefreshToken="$(CFRefreshToken)" CFAppGuid="$(CFAppGuid)" CFRouteGuids="$(CFRouteGuids)"></BindRoutes>

    <CreateServices Condition="'$(CFServiceName)' != '' And '$(CFServiceType)' != '' And '$(CFServicePlan)' != ''" CFRefreshToken="$(CFRefreshToken)" CFSpace="$(CFSpace)" CFServices="$(CFServices)">
      <Output TaskParameter="CFServicesGuids" PropertyName="CFServicesGuids"></Output>
    </CreateServices>

    <BindServices CFRefreshToken="$(CFRefreshToken)" CFAppGuid="$(CFAppGuid)" CFServicesGuids="$(CFServiceGuid)"></BindServices>

    <RestartApp CFAppGuid="$(CFAppGuid)" CFRefreshToken="$(CFRefreshToken)"></RestartApp>

    <!-- Remove previously created temp directory -->
    <RemoveDir Directories="$(PublishTempAppPath)" />
  </Target>

  <!-- This task will remove the application, bound routes and bound provisioned service instances -->
  <Target Name="CleanUp">
    <ItemGroup>
      <CFRefreshToken Include="$(CFRefreshToken)"></CFRefreshToken>
    </ItemGroup>

    <LoginTask CFUser="$(CFUser)" CFPassword="$(CFPassword)" CFServerUri="$(CFServerUri)">
      <Output TaskParameter="CFRefreshToken" PropertyName="CFRefreshToken"/>
    </LoginTask>
    
    <DeleteApp CFRefreshToken="$(CFRefreshToken)" CFAppName="$(CFAppName)" CFSpace="$(CFSpace)" CFDeleteRoutes="true" CFDeleteServices="true"></DeleteApp>
  </Target>

</Project>